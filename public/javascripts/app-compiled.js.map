{"version":3,"sources":["app.js"],"names":[],"mappings":";;;AAGA,AAAC,CAAA,YAAY;AACX,cAAY,CAAC;;AACb,MAAG,CAAC,KAAK,CAAC,IAAI,EAAC;AAAC,SAAK,CAAC,IAAI,GAAE,CAAA,YAAU;AAAC,UAAI,KAAK,GAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,UAAU,GAAC,UAAS,EAAE,EAAC;AAAC,eAAO,OAAO,EAAE,KAAG,UAAU,IAAE,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,KAAG,mBAAmB,CAAA;OAAC,CAAC,IAAI,SAAS,GAAC,UAAS,KAAK,EAAC;AAAC,YAAI,MAAM,GAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAG,KAAK,CAAC,MAAM,CAAC,EAAC;AAAC,iBAAO,CAAC,CAAA;SAAC,IAAG,MAAM,KAAG,CAAC,IAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAC;AAAC,iBAAO,MAAM,CAAA;SAAC,OAAM,CAAC,MAAM,GAAC,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC,CAAA,GAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAA;OAAC,CAAC,IAAI,cAAc,GAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAC,EAAE,CAAC,GAAC,CAAC,CAAC,IAAI,QAAQ,GAAC,UAAS,KAAK,EAAC;AAAC,YAAI,GAAG,GAAC,SAAS,CAAC,KAAK,CAAC,CAAC,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAC,CAAC,CAAC,EAAC,cAAc,CAAC,CAAA;OAAC,CAAC,OAAO,SAAS,IAAI,CAAC,SAAS,EAAC;AAAC,YAAI,CAAC,GAAC,IAAI,CAAC,IAAI,KAAK,GAAC,MAAM,CAAC,SAAS,CAAC,CAAC,IAAG,SAAS,IAAE,IAAI,EAAC;AAAC,gBAAM,IAAI,SAAS,CAAC,kEAAkE,CAAC,CAAC;SAAC,IAAI,KAAK,GAAC,SAAS,CAAC,MAAM,GAAC,CAAC,GAAC,SAAS,CAAC,CAAC,CAAC,GAAC,KAAK,SAAS,CAAC,IAAI,CAAC,CAAC,IAAG,OAAO,KAAK,KAAG,WAAW,EAAC;AAAC,cAAG,CAAC,UAAU,CAAC,KAAK,CAAC,EAAC;AAAC,kBAAM,IAAI,SAAS,CAAC,mEAAmE,CAAC,CAAC;WAAC,IAAG,SAAS,CAAC,MAAM,GAAC,CAAC,EAAC;AAAC,aAAC,GAAC,SAAS,CAAC,CAAC,CAAC,CAAA;WAAC;SAAC,IAAI,GAAG,GAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAC,UAAU,CAAC,CAAC,CAAC,GAAC,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAC,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAC,CAAC,CAAC,IAAI,MAAM,CAAC,OAAM,CAAC,GAAC,GAAG,EAAC;AAAC,gBAAM,GAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAG,KAAK,EAAC;AAAC,aAAC,CAAC,CAAC,CAAC,GAAC,OAAO,CAAC,KAAG,WAAW,GAAC,KAAK,CAAC,MAAM,EAAC,CAAC,CAAC,GAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAC,MAAM,EAAC,CAAC,CAAC,CAAA;WAAC,MAAI;AAAC,aAAC,CAAC,CAAC,CAAC,GAAC,MAAM,CAAA;WAAC,CAAC,IAAE,CAAC,CAAA;SAAC,CAAC,CAAC,MAAM,GAAC,GAAG,CAAC,OAAO,CAAC,CAAA;OAAC,CAAA;KAAC,CAAA,EAAE,AAAC,CAAA;GAAC;;AAE1pC,OAAK,CAAC,SAAS,CAAC,SAAS,GAAG,YAAY;AACtC,QAAI,OAAO,GAAG,EAAE,CAAC;AACjB,QAAI,CAAC,OAAO,CAAC,UAAU,QAAQ,EAAE;AAC/B,aAAO,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;KACvC,CAAC,CAAC;AACH,WAAO,OAAO,CAAC;GAChB,CAAC;AACF,OAAK,CAAC,SAAS,CAAC,IAAI,GAAG,YAAW;AAChC,QAAI,OAAO,GAAG,IAAI,CAAC;AACnB,WAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,UAAU,IAAI,EAAE;AACxD,aAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;KACrC,CAAC,CAAC;GACJ,CAAC;AACF,OAAK,CAAC,SAAS,CAAC,SAAS,GAAG,YAAW;;AAErC,QAAI,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC;AAClB,SAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACzC,UAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;KACzB;;AAAA,AAED,QAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE;AACxB,aAAO,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;KAC5B,CAAC;;AAAC,AAEH,WAAO,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,UAAU,IAAI,EAAE;AACpC,aAAO,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,EAAE;AAC/B,eAAO,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAA;OAC9B,CAAC,CAAA;KACH,CAAC,CAAC;GACJ,CAAC;AACF,OAAK,CAAC,SAAS,CAAC,MAAM,GAAG,YAAW;AAClC,QAAI,GAAG,GAAG,CAAC;QAAE,IAAI,GAAG,EAAE;QAAE,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;AAC1C,SAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE;AAC/B,UAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;AACjC,SAAG,EAAE,CAAC;KACP;AACD,WAAO,IAAI,CAAC;GACb,CAAC;AACF,OAAK,CAAC,SAAS,CAAC,SAAS,GAAG,YAAW;AACrC,QAAI,IAAI,GAAG,EAAE,CAAC;AACd,SAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AAC1B,UAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;AACb,WAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AAC1B,YAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;OAC1B;KACF;AACD,WAAO,IAAI,CAAC;GACb,CAAC;;AAEF,MAAI,GAAG,GAAG,mFAAmF,CAAC;;AAE9F,MAAI,KAAK,GAAG,CACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACzB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACzB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACzB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACzB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACzB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACzB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACzB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACzB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAC1B,CAAC;;AAEF,MAAI,MAAM,GAAG,CACX,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACzB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACzB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACzB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACzB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACzB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACzB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACzB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACzB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAC1B;;;;;;;;;;;;;;;AAAC,AAeF,WAAS,YAAY,CAAC,KAAK,EAAE,EAAE,EAAE;AAC/B,QAAI,IAAI,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC;AAC1B,QAAI,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;AACxC,UAAM,CAAC,SAAS,GAAG,EAAE,CAAC;AACtB,QAAI,CAAC,OAAO,CAAC,UAAU,GAAG,EAAE,CAAC,EAAE;AAC7B,UAAI,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;AACpC,SAAG,CAAC,OAAO,CAAC,UAAU,IAAI,EAAE,CAAC,EAAE;AAC7B,YAAI,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;AAC1C,YAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,GAAC,CAAC,GAAC,GAAG,GAAC,CAAC,CAAC;AAAC,AAChC,YAAI,CAAC,WAAW,GAAG,IAAI,CAAC;AACxB,SAAC,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;OACrB,CAAC,CAAC;AACH,YAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;KACvB,CAAC,CAAC;GACJ,CAAC;;AAEF,WAAS,WAAW,CAAC,KAAK,EAAE;AAC1B,QAAI,IAAI,GAAG,EAAE,CAAC;AACd,QAAI,IAAI,GAAG,EAAE,CAAC;AACd,QAAI,KAAK,GAAG,EAAE,CAAC;AACf,QAAI,OAAO,GAAG,EAAE,CAAC;AACjB,QAAI,QAAQ,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC;AAC7B,QAAI,QAAQ,GAAG,CAAC,CAAC;AACjB,QAAI,aAAa,GAAG,CAAC,CAAC;AACtB,QAAI,SAAS,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;;AAEhC,QAAI,QAAQ,GAAG,UAAU,IAAI,EAAE;AAC7B,UAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;AACrB,YAAI,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC;OAC1B;AACD,UAAI,GAAG,GAAG,CAAC,CAAC;AACZ,WAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE;AACzC,aAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE;AACzC,eAAK,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;AAChB,iBAAO,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;AAClB,eAAK,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AACtC,iBAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC;;AAAC,AAEjD,iBAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AAC1B,qBAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,GAAG,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;aAClD;WACF;AACD,eAAK,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,CAAC;AACpC,aAAG,EAAE,CAAC;SACP;OACF;AACD,aAAO,KAAK,CAAC;KACd,CAAC;;AAEF,QAAI,cAAc,GAAG,UAAU,IAAI,EAAE;AACnC,UAAI,MAAM,GAAG,EAAE,CAAC;AAChB,UAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;AACtB,aAAK,GAAG,QAAQ,EAAE,CAAC;OACpB;AACD,aAAO,CAAC,OAAO,CAAC,UAAU,IAAI,EAAE,CAAC,EAAE;AACjC,YAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE;AAC3B,gBAAM,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;SACnB;OACF,CAAC,CAAC;AACH,aAAO,MAAM,CAAC;KACf,CAAC;;AAEF,QAAI,YAAY,GAAG,UAAU,CAAC,EAAE,CAAC,EAAE;AACjC,UAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;AACpB,eAAO,EAAE,CAAC;OACX;AACD,aAAO,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,SAAS,CAC7B,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,EACd,cAAc,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,CACnC,CAAC;KACH,CAAC;;AAEF,QAAI,QAAQ,GAAG,YAAY;AACzB,UAAI,KAAK,GAAG,EAAE,CAAC;AACf,WAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AAC1B,aAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AAC1B,eAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;SAChC;OACF;AACD,aAAO,KAAK,CAAC;KACd;;;AAAC,AAGF,QAAI,WAAW,GAAG,UAAS,KAAK,EAAE;AAChC,UAAI,IAAI,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC;AAC1B,UAAI,IAAI,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;AAC5B,UAAI,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;;AAE3B,aAAO,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC,KAAK,CAAC,AAAC,CAAC,IAAK;AACtC,eAAO,IAAI,CAAC,KAAK,CAAC,AAAC,CAAC,IAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IACzC,IAAI,CAAC,KAAK,CAAC,AAAC,CAAC,IAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IACpC,KAAK,CAAC,KAAK,CAAC,AAAC,CAAC,IAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;OACzC,CAAC,CAAC;KACJ,CAAC;;AAEF,QAAI,SAAS,GAAG,UAAU,KAAK,EAAE;AAC/B,cAAQ,EAAE,CAAC;AACX,kBAAY,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;AAC/B,cAAQ,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC,WAAW,GAAG,0BAA0B,GAAG,QAAQ,CAAC;AAC1F,cAAQ,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC;AACzB,UAAI,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC;AACzB,UAAI,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;AACxB,WAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;;AAEvB,UAAI,KAAK,GAAG,QAAQ,EAAE,CAAC;;AAEvB,UAAI,YAAY,GAAG,CAAC;;;AAAC,AAGrB,WAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC,KAAK;AACzB,YAAI,IAAI,CAAC,MAAM,KAAK,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;AAC1C,iBAAO,CAAC,GAAG,CAAC,aAAa,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/D,sBAAY,EAAE,CAAC;AACf,kBAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;SACvB;OACF,CAAC;;;AAAC,AAGH,UAAI,YAAY,KAAK,CAAC,EAAE;AACtB,iBAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC;AACjC,eAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,QAAQ,CAAC;;;AAAC,AAGzC,YAAI,WAAW,GAAG,EAAE,CAAC;AACrB,aAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC,KAAK,WAAW,CAAC,IAAI,CAAC,EAAC,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,IAAI,EAAE,EAAC,CAAC,CAAC,CAAC;AACzE,mBAAW,GAAG,WAAW,CACtB,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAC3C,MAAM,CAAC,AAAC,CAAC,IAAK,CAAC,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AACnC,eAAO,CAAC,GAAG,CAAC,mBAAmB,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AAC1E,YAAI,eAAe,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;AACzC,YAAI,gBAAgB,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC,GAAG,CAAC,AAAC,IAAI,IAAK;AAC5D,cAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAC5B,iBAAO;AACL,eAAG,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAChD,iBAAK,EAAE,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;WACxC,CAAC;SACH,CAAC,CACC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAC/C,MAAM,CAAC,AAAC,CAAC,IAAK,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;;AAErC,YAAI,gBAAgB,CAAC,MAAM,GAAG,CAAC,EAAE;AAC/B,cAAI,IAAI,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;AACnC,iBAAO,CAAC,GAAG,CAAC,mBAAmB,GAAG,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;AACrD,cAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC;AAC5D,iBAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,MAAM,GAAG,cAAc,GAAG,QAAQ,CAAC,IAAI,CAAC,GAAG,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;AAC3G,kBAAQ,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC;;AAAC,SAEtC,MAAM;AACL,gBAAG,WAAW,CAAC,QAAQ,CAAC,EAAE;AACxB,qBAAO;aACR;;AAAA,AAED,gBAAG,aAAa,GAAG,EAAE,EAAE;;AAErB,qBAAO,CAAC,GAAG,CAAC,cAAc,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,2BAAa,GAAG,CAAC,CAAC;AAClB,uBAAS,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;aACzB,MAAM;;AAEL,qBAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;AAClE,2BAAa,EAAE,CAAC;AAChB,uBAAS,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;aAC5C;WACF;OACF;AACD,UAAG,WAAW,CAAC,QAAQ,CAAC,EAAE;AACxB,oBAAY,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;AAClC,gBAAQ,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;AAC1D,eAAO,SAAS,CAAC;OAClB,MAAM;AACL,gBAAQ,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;AACzD,gBAAQ,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;AAC3D,oBAAY,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;AAClC,YAAI,QAAQ,IAAI,IAAI,EAAE;AACpB,sBAAY,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;AAClC,kBAAQ,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;AAC5D,iBAAO,yBAAyB,CAAC;SAClC;AACD,eAAO,SAAS,CAAC,QAAQ,CAAC,CAAC;OAC5B;KACF;;;AAAC,AAGF,gBAAY,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;AACpC,gBAAY,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;AAClC,cAAU,CAAC,MAAM,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;GAE1C;;AAAA,AAED,MAAI,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;AAC5C,MAAI,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;AAC9C,QAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,UAAS,CAAC,EAAE;AAC3C,KAAC,CAAC,cAAc,EAAE,CAAC;AACnB,QAAI,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,AAAC,CAAC,IAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,WAAO,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC;AAC7B,QAAG,GAAG,CAAC,MAAM,KAAK,EAAE,IAAI,GAAG,CAAC,KAAK,CAAC,AAAC,CAAC,IAAK,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;AAC/E,kBAAY,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;AAC/B,gBAAU,CAAC,MAAM,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;KACpD,MAAM;AACL,WAAK,CAAC,sGAAsG,CAAC,CAAC;KAC/G;GAEF,EAAE,KAAK,CAAC,CAAC;;AAGV,SAAO,CAAC,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC;CAClC,CAAA,EAAE,CAAE","file":"app-compiled.js","sourcesContent":["/**\r\n * Created by suprsidr on 10/31/2015.\r\n */\r\n(function () {\r\n  'use strict';\r\n  if(!Array.from){Array.from=(function(){var toStr=Object.prototype.toString;var isCallable=function(fn){return typeof fn==='function'||toStr.call(fn)==='[object Function]'};var toInteger=function(value){var number=Number(value);if(isNaN(number)){return 0}if(number===0||!isFinite(number)){return number}return(number>0?1:-1)*Math.floor(Math.abs(number))};var maxSafeInteger=Math.pow(2,53)-1;var toLength=function(value){var len=toInteger(value);return Math.min(Math.max(len,0),maxSafeInteger)};return function from(arrayLike){var C=this;var items=Object(arrayLike);if(arrayLike==null){throw new TypeError(\"Array.from requires an array-like object - not null or undefined\");}var mapFn=arguments.length>1?arguments[1]:void undefined;var T;if(typeof mapFn!=='undefined'){if(!isCallable(mapFn)){throw new TypeError('Array.from: when provided, the second argument must be a function');}if(arguments.length>2){T=arguments[2]}}var len=toLength(items.length);var A=isCallable(C)?Object(new C(len)):new Array(len);var k=0;var kValue;while(k<len){kValue=items[k];if(mapFn){A[k]=typeof T==='undefined'?mapFn(kValue,k):mapFn.call(T,kValue,k)}else{A[k]=kValue}k+=1}A.length=len;return A}}())}\r\n\r\n  Array.prototype.concatAll = function () {\r\n    var results = [];\r\n    this.forEach(function (subArray) {\r\n      results.push.apply(results, subArray);\r\n    });\r\n    return results;\r\n  };\r\n  Array.prototype.diff = function() {\r\n    var context = this;\r\n    return [1, 2, 3, 4, 5, 6, 7, 8, 9].filter(function (item) {\r\n      return context.indexOf(item) === -1;\r\n    });\r\n  };\r\n  Array.prototype.intersect = function() {\r\n    // convert arguments to array\r\n    var args = [this];\r\n    for (var i = 0; i < arguments.length; i++) {\r\n      args.push(arguments[i]);\r\n    }\r\n    // args[0] needs to have greatest length\r\n    args.sort(function (a, b) {\r\n      return b.length - a.length;\r\n    });\r\n    // get intersection\r\n    return args[0].filter(function (item) {\r\n      return args.every(function (arg) {\r\n        return arg.indexOf(item) > -1\r\n      })\r\n    });\r\n  };\r\n  Array.prototype.toRows = function() {\r\n    var idx = 0, rows = [], len = this.length;\r\n    for (var i = 0; i < len; i += 9) {\r\n      rows[idx] = this.slice(i, i + 9);\r\n      idx++;\r\n    }\r\n    return rows;\r\n  };\r\n  Array.prototype.toColumns = function() {\r\n    var cols = [];\r\n    for (var i = 0; i < 9; i++) {\r\n      cols[i] = [];\r\n      for (var j = 0; j < 9; j++) {\r\n        cols[i].push(this[j][i]);\r\n      }\r\n    }\r\n    return cols;\r\n  };\r\n\r\n  var str = '900000070005020800060003004000050020080009100007000006000600000001070050040008003';\r\n\r\n  var board = [\r\n    8, 0, 0, 4, 0, 6, 0, 0, 7,\r\n    0, 0, 0, 0, 0, 0, 4, 0, 0,\r\n    0, 1, 0, 0, 0, 0, 6, 5, 0,\r\n    5, 0, 9, 0, 3, 0, 7, 8, 0,\r\n    0, 0, 0, 0, 7, 0, 0, 0, 0,\r\n    0, 4, 8, 0, 2, 0, 1, 0, 3,\r\n    0, 5, 2, 0, 0, 0, 0, 9, 0,\r\n    0, 0, 1, 0, 0, 0, 0, 0, 0,\r\n    3, 0, 0, 9, 0, 2, 0, 0, 5\r\n  ];\r\n\r\n  var board2 = [\r\n    0, 0, 7, 0, 0, 0, 9, 0, 0,\r\n    0, 0, 0, 8, 0, 4, 0, 0, 0,\r\n    6, 0, 0, 7, 1, 3, 0, 0, 2,\r\n    0, 1, 3, 6, 0, 5, 2, 9, 0,\r\n    0, 0, 6, 0, 0, 0, 3, 0, 0,\r\n    0, 4, 8, 2, 0, 7, 6, 5, 0,\r\n    8, 0, 0, 4, 2, 1, 0, 0, 3,\r\n    0, 0, 0, 9, 0, 8, 0, 0, 0,\r\n    0, 0, 1, 0, 0, 0, 8, 0, 0\r\n  ];\r\n\r\n  /*var solved = [\r\n    8, 3, 5, 4, 1, 6, 9, 2, 7,\r\n    2, 9, 6, 8, 5, 7, 4, 3, 1,\r\n    4, 1, 7, 2, 9, 3, 6, 5, 8,\r\n    5, 6, 9, 1, 3, 4, 7, 8, 2,\r\n    1, 2, 3, 6, 7, 8, 5, 4, 9,\r\n    7, 4, 8, 5, 2, 9, 1, 6, 3,\r\n    6, 5, 2, 7, 8, 1, 3, 9, 4,\r\n    9, 8, 1, 3, 4, 5, 2, 7, 6,\r\n    3, 7, 4, 9, 6, 2, 8, 1, 5\r\n  ];*/\r\n\r\n  // simply for display on the page\r\n  function displayBoard(board, el) {\r\n    var rows = board.toRows();\r\n    var socket = document.querySelector(el);\r\n    socket.innerHTML = '';\r\n    rows.forEach(function (row, r) {\r\n      var p = document.createElement('p');\r\n      row.forEach(function (item, c) {\r\n        var span = document.createElement('span');\r\n        span.classList.add('r'+r+'c'+c); // can we update individual cells and add animation?\r\n        span.textContent = item;\r\n        p.appendChild(span);\r\n      });\r\n      socket.appendChild(p);\r\n    });\r\n  };\r\n\r\n  function solveSodoku(board) {\r\n    var rows = [];\r\n    var cols = [];\r\n    var quads = [];\r\n    var quadMap = [];\r\n    var tmpBoard = board.slice();\r\n    var numTries = 0;\r\n    var rollbackCount = 0;\r\n    var snapshots = [board.slice()];\r\n\r\n    var getQuads = function (rows) {\r\n      if (rows.length === 0) {\r\n        rows = tmpBoard.toRows();\r\n      }\r\n      var idx = 0;\r\n      for (var outer = 0; outer < 9; outer += 3) {\r\n        for (var inner = 0; inner < 9; inner += 3) {\r\n          quads[idx] = [];\r\n          quadMap[idx] = [];\r\n          for (var r = outer; r < outer + 3; r++) {\r\n            quads[idx].push(rows[r].slice(inner, inner + 3));\r\n            // ugly attempt to map which row item is in which quad\r\n            for (var j = 0; j < 3; j++) {\r\n              quadMap[idx].push(r + ':' + parseInt(inner + j));\r\n            }\r\n          }\r\n          quads[idx] = quads[idx].concatAll();\r\n          idx++;\r\n        }\r\n      }\r\n      return quads;\r\n    };\r\n\r\n    var getQuadContent = function (idxs) {\r\n      var result = [];\r\n      if (quads.length === 0) {\r\n        quads = getQuads();\r\n      }\r\n      quadMap.forEach(function (quad, i) {\r\n        if (quad.indexOf(idxs) > -1) {\r\n          result = quads[i];\r\n        }\r\n      });\r\n      return result;\r\n    };\r\n\r\n    var getCellPlays = function (r, c) {\r\n      if (rows[r][c] !== 0) {\r\n        return [];\r\n      }\r\n      return rows[r].diff().intersect(\r\n        cols[c].diff(),\r\n        getQuadContent(r + \":\" + c).diff()\r\n      );\r\n    };\r\n\r\n    var getPlays = function () {\r\n      var plays = [];\r\n      for (var i = 0; i < 9; i++) {\r\n        for (var j = 0; j < 9; j++) {\r\n          plays.push(getCellPlays(i, j));\r\n        }\r\n      }\r\n      return plays;\r\n    };\r\n\r\n    // check to see if we've solved without answer\r\n    var checkSolved = function(board) {\r\n      var rows = board.toRows();\r\n      var cols = rows.toColumns();\r\n      var quads = getQuads(rows);\r\n\r\n      return [1,2,3,4,5,6,7,8,9].every((x) => {\r\n        return rows.every((r) => r.indexOf(x) > -1) &&\r\n          cols.every((c) => c.indexOf(x) > -1) &&\r\n          quads.every((q) => q.indexOf(x) > -1);\r\n      });\r\n    };\r\n\r\n    var fillBoard = function (board) {\r\n      numTries++;\r\n      displayBoard(board, '#socket');\r\n      document.querySelector('h2#attempts').textContent = 'No. of Passes to Solve: ' + numTries;\r\n      tmpBoard = board.slice();\r\n      rows = tmpBoard.toRows();\r\n      cols = rows.toColumns();\r\n      quads = getQuads(rows);\r\n\r\n      var plays = getPlays();\r\n\r\n      var replacements = 0;\r\n\r\n      // Get all the easy ones first\r\n      plays.forEach((play, i) => {\r\n        if (play.length === 1 && tmpBoard[i] === 0) {\r\n          console.log('replacing: ' + tmpBoard[i] + ' with: ' + play[0]);\r\n          replacements++;\r\n          tmpBoard[i] = play[0];\r\n        }\r\n      });\r\n\r\n      // if we are out of easy, take a snapshot and try one of the next easiest.\r\n      if (replacements === 0) {\r\n        snapshots.push(tmpBoard.slice());\r\n        console.log('making snapshot', tmpBoard);\r\n        // get our next easiest\r\n        // calculate the quad with the most filled in, and start there\r\n        var nextEasiest = [];\r\n        quads.forEach((quad, i) => nextEasiest.push({idx: i, val: quad.diff()}));\r\n        nextEasiest = nextEasiest\r\n          .sort((a, b) => a.val.length - b.val.length)\r\n          .filter((a) => a.val.length > 0);\r\n        console.log('nextEasiestQuad: ' + nextEasiest[0].idx, nextEasiest[0].val);\r\n        var nextEasiestQuad = nextEasiest[0].idx;\r\n        var nextEasiestCells = quadMap[nextEasiestQuad].map((item) => {\r\n          var parts = item.split(':');\r\n          return {\r\n            idx: parseInt(parts[0]) * 9 + parseInt(parts[1]),\r\n            plays: getCellPlays(parts[0], parts[1])\r\n          };\r\n        })\r\n          .sort((a, b) => a.plays.length - b.plays.length)\r\n          .filter((a) => a.plays.length > 0);\r\n\r\n        if (nextEasiestCells.length > 0) {\r\n          var next = nextEasiestCells[0].idx;\r\n          console.log('nextEasiestCell: ' + next, plays[next]);\r\n          var rndIdx = Math.floor(Math.random() * plays[next].length);\r\n          console.log('using rndIdx: ' + rndIdx + ' replacing: ' + tmpBoard[next] + ' with: ' + plays[next][rndIdx]);\r\n          tmpBoard[next] = plays[next][rndIdx];\r\n          //if(numTries > 2) return;\r\n        } else {\r\n          if(checkSolved(tmpBoard)) {\r\n            return;\r\n          }\r\n          // how do we determine where we went wrong? how far back do I rollback to?\r\n          if(rollbackCount > 30) {\r\n            // full reset\r\n            console.log('full reset: ', snapshots[0]);\r\n            rollbackCount = 0;\r\n            fillBoard(snapshots[0]);\r\n          } else {\r\n            // we'll rollback to previous\r\n            console.log('rolling back to: ', snapshots[snapshots.length - 2]);\r\n            rollbackCount++;\r\n            fillBoard(snapshots[snapshots.length - 2]);\r\n          }\r\n        }\r\n      }\r\n      if(checkSolved(tmpBoard)) {\r\n        displayBoard(tmpBoard, '#socket');\r\n        document.querySelector('#hurray').style.display = 'block';\r\n        return 'Hurray!';\r\n      } else {\r\n        document.querySelector('#hurray').style.display = 'none';\r\n        document.querySelector('#boo-hiss').style.display = 'none';\r\n        displayBoard(tmpBoard, '#socket');\r\n        if (numTries >= 2000) {\r\n          displayBoard(tmpBoard, '#socket');\r\n          document.querySelector('#boo-hiss').style.display = 'block';\r\n          return 'Sorry, too many passes!';\r\n        }\r\n        return fillBoard(tmpBoard);\r\n      }\r\n    };\r\n\r\n    // display our boards\r\n    displayBoard(tmpBoard, '#original');\r\n    displayBoard(tmpBoard, '#socket');\r\n    setTimeout(() => fillBoard(tmpBoard), 0);\r\n\r\n  } // end solveSodoku\r\n\r\n  var input = document.querySelector('input');\r\n  var button = document.querySelector('button');\r\n  button.addEventListener('click', function(e) {\r\n    e.preventDefault();\r\n    var arr = Array.from(input.value, (i) => parseInt(i));\r\n    console.log(arr, arr.length);\r\n    if(arr.length === 81 && arr.every((i) => [0,1,2,3,4,5,6,7,8,9].indexOf(i) > -1)) {\r\n      displayBoard(arr, '#original');\r\n      setTimeout(() => console.log(solveSodoku(arr)), 0);\r\n    } else {\r\n      alert('Sorry your array does not qualify.\\n It\\'s either not 81 chars long, or contains illegal characters.');\r\n    }\r\n\r\n  }, false);\r\n\r\n\r\n  console.log(solveSodoku(board2));\r\n}());\r\n"]}